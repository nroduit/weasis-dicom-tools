<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.weasis</groupId>
	<artifactId>weasis-dicom-tools</artifactId>
	<packaging>jar</packaging>
	<name>Weasis DICOM API (based on dcm4che3)</name>
	<version>5.22.4</version>

	<properties>
		<java-version>1.8</java-version>
		<enforcer.jdk-version>[${java-version},)</enforcer.jdk-version>
		<enforcer.maven-version>[3.0.5,)</enforcer.maven-version>
		<dcm4che.version>${project.version}</dcm4che.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<licenses>
		<license>
			<name>Eclipse Public License v2.0</name>
			<url>http://www.eclipse.org/legal/epl-v20.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:nroduit/weasis-dicom-tools.git</connection>
		<developerConnection>scm:git:https://github.com/nroduit/weasis-dicom-tools.git</developerConnection>
		<url>https://github.com/nroduit/weasis-dicom-tools</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Weasis Maven Packages</name>
			<url>https://maven.pkg.github.com/nroduit/weasis-dicom-tools</url>
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>mvn-repo-master</id>
			<url>https://raw.github.com/nroduit/mvn-repo/master/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>www.dcm4che.org</id>
			<name>dcm4che Repository</name>
			<url>http://maven.dcm4che.org</url>
			<!-- <url>http://www.dcm4che.org/maven2</url> (which will redirected to https://www.dcm4che.org/maven2). -->
		</repository>
	</repositories>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java-version}</source>
						<target>${java-version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jarsigner-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/dict</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>min-requirement</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${enforcer.maven-version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${enforcer.jdk-version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>bind-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.dcm4che</groupId>
									<artifactId>dcm4che-dict</artifactId>
									<version>${dcm4che.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<includes>uids.xml,dataelements.xml</includes>
									<excludes>META-INF/**</excludes>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/dict</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- To perform network DICOM test with a demo server, run: mvn -Dnet.test -->
	<profiles>
		<profile>
			<id>default-profile</id>
			<activation>
				<property>
					<name>!net.test</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*NetTest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>network-test</id>
			<activation>
				<property>
					<name>net.test</name>
				</property>
			</activation>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-core</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-dict</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-net</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-json</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>

		<!-- dcm4che-imageio packages are linked to native libraries not located in this package (see dcm4che-imageio-opencv). 
			Only required by storeSCU, Dicomizer and ForwardUtil (DicomGateway) for uncompressing data not supported by the destination. -->
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-image</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio-opencv</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio-rle</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<!-- End of dcm4che-imageio packages -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>
